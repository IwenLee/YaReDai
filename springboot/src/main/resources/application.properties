#用户名 密码配置  访问的时候
security.user.name=admin
security.user.password=test

#初始化参数
wisely.userNawme=lihao
wisely.passWord=123

#配置spring MVC视图解析器
spring.mvc.view.prefix=/
spring.mvc.view.suffix=.html

#指定log的配置文件，以及记录Spring Boot的log级别（注意大于1.2.5版本之后的spring-boot 写法=classpath:log.xml  ）  
logging.path=/var/logs	
logging.file=C://service_log/myapp.log
logging.config=classpath:logback.xml
logging.level.org.springframework.web:ERROR

#服务器端口
server.port=8082

#配置请求前缀一般是项目名称，主要是方便内嵌tomcat和外部tomcat有相同请求url
server.contextPath=/springboot/

#文件上传下载限制（可以再启动类中配置）
#(这里是限制单个文件大小)
spring.http.multipart.maxFileSize=1000Mb
#(这里是限制总文件大小)
spring.http.multipart.maxRequestSize=2000Mb


# mysql 数据库基础配置
#如果是默认的连接池，就直接去掉 spring.datasource.type 配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource 
spring.datasource.url=jdbc:mysql://localhost:3306/spring
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=123456
# 连接池的大小配置，，注意Spring Boot默认的连接池是org.apache.tomcat.jdbc.pool.DataSource
#spring.datasource.max-active=20
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10

# Druid 连接池大小属性的配置
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# JPA配置（Hibernate） ：JPA全称Java Persistence API。 JPA通过JDK 5.0注解或XML描述对象－关系表的映射关系，并将运行期的实体对象持久化到数据库中
spring.jpa.database = MYSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

#mongodb连接源路径 （m默认连接本地）
#spring.data.mongodb.authentication-database= # Authentication database name.
#spring.data.mongodb.database=test # Database name.
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
#spring.data.mongodb.host=localhost # Mongo server host.
#spring.data.mongodb.password= # Login password of the mongo server.
#spring.data.mongodb.port=27017 # Mongo server port.
#spring.data.mongodb.repositories.enabled=true # Enable Mongo repositories.
#spring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. When set, host and port are ignored.
#spring.data.mongodb.username= # Login user of the mongo server.
#mongodb 默认配置
#spring.data.mongodb.uri=mongodb://192.168.0.226/mongoDB

#redis配置		（默认连接笨的）
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
#spring.data.redis.uri=http://localhost/
